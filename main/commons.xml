<?xml version="1.0" encoding="UTF-8"?>


<project name="commons">


    <property name="phingCommonsRoot" value="/srv/phing"/>
    <property name="phingCommonsRootCustom" value="/srv/phing-custom"/>


    <loadfile property="phingCommonsVersion" file="/srv/VERSION"/>
    <php function="trim" returnProperty="phingCommonsVersion" level="debug">
        <param value="${phingCommonsVersion}"/>
    </php>


    <php function="dirname" returnProperty="projectRoot" level="debug">
        <param value="${phing.file}"/>
    </php>
    <resolvepath propertyName="projectRoot" file="${projectRoot}"/>


    <loadfile property="projectVersion" file="${projectRoot}/VERSION"/>
    <php function="trim" returnProperty="projectVersion" level="debug">
        <param value="${projectVersion}"/>
    </php>


    <autoloader autoloaderpath="${phingCommonsRoot}/vendor/autoload.php"/>
    <taskdef classname="\elnebuloso\Phing\ConfigureComposer" name="my-configure-composer"/>
    <taskdef classname="\elnebuloso\Phing\PHPMetrics1DirectoriesTask" name="my-php-metrics1-directories"/>
    <taskdef classname="\elnebuloso\Phing\PHPMetrics2DirectoriesTask" name="my-php-metrics2-directories"/>
    <taskdef classname="\elnebuloso\Phing\Semver" name="my-semver"/>
    <taskdef classname="\elnebuloso\Phing\Slugify" name="my-slugify"/>


    <import file="${phingCommonsRoot}/targets/bundle.xml"/>
    <import file="${phingCommonsRoot}/targets/clean.xml"/>
    <import file="${phingCommonsRoot}/targets/compass.xml"/>
    <import file="${phingCommonsRoot}/targets/composer.xml"/>
    <import file="${phingCommonsRoot}/targets/docker.xml"/>
    <import file="${phingCommonsRoot}/targets/init.xml"/>
    <import file="${phingCommonsRoot}/targets/npm.xml"/>
    <import file="${phingCommonsRoot}/targets/project.xml"/>
    <import file="${phingCommonsRoot}/targets/report.xml"/>
    <import file="${phingCommonsRoot}/targets/test.xml"/>


    <if>
        <and>
            <available file="${phingCommonsRootCustom}/commons.xml"/>
        </and>
        <then>
            <import file="${phingCommonsRootCustom}/commons.xml"/>
        </then>
        <else>
            <echo message="${phingCommonsRootCustom}/commons.xml not existing, skipping import"/>
        </else>
    </if>


    <fail unless="projectName" message="missing projectName"/>
    <fail unless="projectVersion" message="missing projectVersion"/>


    <target name="commons:help:version">
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="phing commons version: ${phingCommonsVersion}"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
    </target>


    <target name="commons:init">
        <property name="projectFolderMain" value="main"/>
        <property name="projectFolderMainComposer" value=""/>
        <property name="projectFolderMainCompass" value=""/>
        <property name="projectFolderMainNpm" value=""/>
        <property name="projectFolderBuild" value="build"/>
        <property name="projectFolderBuildTmp" value="tmp"/>
        <property name="projectFolderBuildDist" value="dist"/>
        <property name="projectFolderBuildReports" value="reports"/>

        <property name="projectDirMain" value="${projectRoot}/${projectFolderMain}"/>
        <property name="projectDirMainComposer" value="${projectRoot}/${projectFolderMain}/${projectFolderMainComposer}"/>
        <property name="projectDirMainCompass" value="${projectRoot}/${projectFolderMain}/${projectFolderMainCompass}"/>
        <property name="projectDirMainNpm" value="${projectRoot}/${projectFolderMain}/${projectFolderMainNpm}"/>
        <property name="projectDirBuild" value="${projectRoot}/${projectFolderBuild}"/>
        <property name="projectDirBuildTmp" value="${projectRoot}/${projectFolderBuild}/${projectFolderBuildTmp}"/>
        <property name="projectDirBuildDist" value="${projectRoot}/${projectFolderBuild}/${projectFolderBuildDist}"/>
        <property name="projectDirBuildReports" value="${projectRoot}/${projectFolderBuild}/${projectFolderBuildReports}"/>

        <resolvepath propertyName="projectDirMain" file="${projectDirMain}"/>
        <resolvepath propertyName="projectDirMainComposer" file="${projectDirMainComposer}"/>
        <resolvepath propertyName="projectDirMainCompass" file="${projectDirMainCompass}"/>
        <resolvepath propertyName="projectDirMainNpm" file="${projectDirMainNpm}"/>
        <resolvepath propertyName="projectDirBuild" file="${projectDirBuild}"/>
        <resolvepath propertyName="projectDirBuildTmp" file="${projectDirBuildTmp}"/>
        <resolvepath propertyName="projectDirBuildDist" file="${projectDirBuildDist}"/>
        <resolvepath propertyName="projectDirBuildReports" file="${projectDirBuildReports}"/>
    </target>


    <target name="commons:help" depends="commons:init, commons:help:version, bundle:help, clean:help, compass:help, composer:help, docker:help, init:help, npm:help, report:help, test:help, project:help"/>


</project>
