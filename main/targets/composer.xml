<?xml version="1.0" encoding="UTF-8"?>


<project>


    <import file="${phing_commons_root}/targets/composer/install/production.xml"/>
    <import file="${phing_commons_root}/targets/composer/install.xml"/>
    <import file="${phing_commons_root}/targets/composer/remove.xml"/>
    <import file="${phing_commons_root}/targets/composer/require.xml"/>
    <import file="${phing_commons_root}/targets/composer/update.xml"/>


    <target name="composer:help">
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="target                         description"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="composer:install:production    ${composer_install_production_description}"/>
        <echo message="composer:install               ${composer_install_description}"/>
        <echo message="composer:remove                ${composer_remove_description}"/>
        <echo message="composer:require               ${composer_require_description}"/>
        <echo message="composer:update                ${composer_update_description}"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
    </target>


    <target name="composer:base:help" depends="composer:base:init">
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="property                          value"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="composer_docker_file              ${composer_docker_file}"/>
        <echo message="composer_docker_build_ctx         ${composer_docker_build_ctx}"/>
        <echo message="composer_docker_build_args        ${composer_docker_build_args}"/>
        <echo message="composer_docker_run_args          ${composer_docker_run_args}"/>
        <echo message="composer_docker_build_passthru    ${composer_docker_build_passthru}"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
    </target>


    <target name="composer:base:init" hidden="true">
        <property name="composer_docker_file" value="${project_root}/Dockerfile"/>
        <property name="composer_docker_build_ctx" value="."/>
        <property name="composer_docker_build_args" value="--rm --pull --target dev-composer"/>
        <property name="composer_docker_build_passthru" value="1"/>
        <property name="composer_docker_run_args" value="--rm"/>
    </target>


    <target name="composer:base:command" depends="composer:base:init" hidden="true">
        <if>
            <equals arg1="${project_composer_type}" arg2="dockerception"/>
            <then>
                <exec command="${composer_command}" passthru="true" checkreturn="true" level="info" dir="${project_dir_main_composer}"/>
            </then>
        </if>

        <if>
            <equals arg1="${project_composer_type}" arg2="dockerfile"/>
            <then>
                <exec command="docker build ${composer_docker_build_args} --tag ${project_name}-composer --file ${composer_docker_file} ${composer_docker_build_ctx}" passthru="${composer_docker_build_passthru}" checkreturn="true" level="info" dir="${project_root}"/>
                <exec command="docker-run-composer ${composer_docker_run_args} ${project_name}-composer ${composer_command}" passthru="true" checkreturn="true" level="info" dir="${project_dir_main_composer}"/>
            </then>
        </if>
    </target>


</project>
