<?xml version="1.0" encoding="UTF-8"?>


<project default="init:lumen5">


    <property name="init_lumen5_description" value="init lumen5 application" override="true"/>


    <target name="init:lumen5:init" hidden="true">
        <property name="init_lumen5_url" value="lumen5.127.0.0.1.xip.io"/>
    </target>


    <target name="init:lumen5:help" depends="init:lumen5:init">
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="${init_lumen5_description}"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
    </target>


    <target name="init:lumen5" depends="clean:dist, init:lumen5:init, init:lumen5:before, init:lumen5:main, init:lumen5:after">
        <echo message="browse application after docker start, using phing start"/>
        <echo message="${init_lumen5_url}"/>
    </target>


    <target name="init:lumen5:before" hidden="true">
        <echo message="no actions defined"/>
    </target>


    <target name="init:lumen5:after" hidden="true">
        <echo message="no actions defined"/>
    </target>


    <target name="init:lumen5:main" hidden="true">
        <fail message="${project_dir_main} exists for creating lumen5 application">
            <condition>
                <available file="${project_dir_main}" type="dir"/>
            </condition>
        </fail>

        <exec command="composer create-project --prefer-dist --remove-vcs laravel/lumen:^5 ${project_dir_main}" passthru="true" checkreturn="true" level="info"/>
        <delete dir="${project_dir_main}/.git" quiet="true"/>

        <copy todir="${project_root}" overwrite="true">
            <fileset dir="${phing_commons_root}/resources/init/lumen5/0">
                <include name="**"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <phing-configure-composer selector="name" value="my/${project_name}"/>
        <phingcall target="composer:update"/>
    </target>


</project>
