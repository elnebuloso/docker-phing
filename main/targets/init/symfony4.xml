<?xml version="1.0" encoding="UTF-8"?>


<project default="init:symfony4">


    <property name="initSymfony4Description" value="init symfony4 application" override="true"/>
    <property name="initSymfony4Url" value="symfony4.127.0.0.1.xip.io" override="true"/>


    <target name="init:symfony4:help">
        <echo message="${initSymfony4Description}"/>
    </target>


    <target name="init:symfony4" depends="init:symfony4:before, init:symfony4:main, init:symfony4:after">
        <echo message="browse application after docker start"/>
        <echo message="${initSymfony4Url}"/>
    </target>


    <target name="init:symfony4:before" hidden="true">
        <echo message="no actions defined"/>
    </target>


    <target name="init:symfony4:after" hidden="true">
        <echo message="no actions defined"/>
    </target>


    <target name="init:symfony4:main">
        <fail message="${projectDirMain} exists for creating symfony4 application">
            <condition>
                <available file="${projectDirMain}" type="dir"/>
            </condition>
        </fail>

        <input propertyname="type" defaultValue="min">type (min|web)</input>

        <!-- https://symfony.com/doc/current/setup.html -->

        <!-- https://packagist.org/packages/symfony/skeleton -->
        <!-- https://github.com/symfony/skeleton -->
        <if>
            <equals arg1="${type}" arg2="min"/>
            <then>
                <exec command="composer create-project --prefer-dist --no-dev --remove-vcs symfony/skeleton:^4 ${projectDirMain}" passthru="true" checkreturn="true" level="info"/>
            </then>
        </if>

        <!-- https://packagist.org/packages/symfony/website-skeleton -->
        <!-- https://github.com/symfony/website-skeleton -->
        <if>
            <equals arg1="${type}" arg2="web"/>
            <then>
                <exec command="composer create-project --prefer-dist --no-dev --remove-vcs symfony/website-skeleton:^4 ${projectDirMain}" passthru="true" checkreturn="true" level="info"/>
            </then>
        </if>

        <delete dir="${projectDirMain}/.git" quiet="true"/>

        <copy todir="${projectRoot}" overwrite="true">
            <fileset dir="${phingCommonsRoot}/resources/init/symfony4/0">
                <include name="**"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <my-configure-composer selector="name" value="my/${projectName}"/>
        <my-configure-composer selector="config.platform.php" value="7.3"/>

        <!-- https://flex.symfony.com -->
        <!-- https://symfony.com/doc/current/quick_tour/flex_recipes.html -->
        <!-- https://symfony.com/doc/bundles/ -->

        <if>
            <equals arg1="${type}" arg2="min"/>
            <then>
                <input propertyname="install" defaultValue="">install api components (yes|no)</input>

                <if>
                    <equals arg1="${install}" arg2="yes"/>
                    <then>
                        <phingcall target="composer:require">
                            <property name="package" value="api"/>
                            <property name="options" value=""/>
                        </phingcall>
                    </then>
                </if>
            </then>
        </if>

        <if>
            <equals arg1="${type}" arg2="web"/>
            <then>
                <input propertyname="install" defaultValue="">install web components (yes|no)</input>

                <if>
                    <equals arg1="${install}" arg2="yes"/>
                    <then>
                        <phingcall target="composer:require">
                            <property name="package" value="annotations"/>
                            <property name="options" value=""/>
                        </phingcall>
                        <phingcall target="composer:require">
                            <property name="package" value="twig"/>
                            <property name="options" value=""/>
                        </phingcall>
                        <phingcall target="composer:require">
                            <property name="package" value="twig-extensions"/>
                            <property name="options" value=""/>
                        </phingcall>
                        <phingcall target="composer:require">
                            <property name="package" value="webpack-encore"/>
                            <property name="options" value=""/>
                        </phingcall>
                        <phingcall target="composer:require">
                            <property name="package" value="profiler"/>
                            <property name="options" value="--dev"/>
                        </phingcall>
                        <phingcall target="composer:require">
                            <property name="package" value="maker-bundle"/>
                            <property name="options" value="--dev"/>
                        </phingcall>
                    </then>
                </if>
            </then>
        </if>
    </target>


</project>
