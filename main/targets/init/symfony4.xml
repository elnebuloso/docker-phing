<?xml version="1.0" encoding="UTF-8"?>


<project default="init:symfony4">


    <property name="init_symfony4_description" value="init symfony4 application" override="true"/>


    <target name="init:symfony4:help">
        <echo message="----------------------------------------------------------------------------------------------------"/>
        <echo message="${init_symfony4_description}"/>
        <echo message="----------------------------------------------------------------------------------------------------"/>
    </target>


    <target name="init:symfony4" depends="clean:dist, init:symfony4:before, init:symfony4:main, init:symfony4:after">
        <echo message="browse application after docker start, using phing start"/>
        <echo message="${init_symfony4_url}"/>
    </target>


    <target name="init:symfony4:before" hidden="true">
        <echo message="no actions defined"/>
    </target>


    <target name="init:symfony4:after" hidden="true">
        <echo message="no actions defined"/>
    </target>


    <target name="init:symfony4:main" hidden="true">
        <fail message="${project_dir_main} exists for creating symfony4 application">
            <condition>
                <available file="${project_dir_main}" type="dir"/>
            </condition>
        </fail>

        <input propertyname="type" defaultValue="">type (min|api|max)</input>

        <!-- https://symfony.com/doc/current/setup.html -->

        <!-- https://packagist.org/packages/symfony/skeleton -->
        <!-- https://github.com/symfony/skeleton -->
        <if>
            <or>
                <equals arg1="${type}" arg2="min"/>
                <equals arg1="${type}" arg2="api"/>
            </or>
            <then>
                <exec command="composer create-project --prefer-dist --remove-vcs symfony/skeleton:^4 ${project_dir_main}" passthru="true" checkreturn="true" level="info"/>
            </then>
        </if>

        <!-- https://packagist.org/packages/symfony/website-skeleton -->
        <!-- https://github.com/symfony/website-skeleton -->
        <if>
            <equals arg1="${type}" arg2="max"/>
            <then>
                <exec command="composer create-project --prefer-dist --remove-vcs symfony/website-skeleton:^4 ${project_dir_main}" passthru="true" checkreturn="true" level="info"/>
            </then>
        </if>

        <delete dir="${project_dir_main}/.git" quiet="true"/>

        <copy todir="${project_root}" overwrite="true">
            <fileset dir="${phing_commons_root}/resources/init/symfony4/0">
                <include name="**"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <phing-configure-composer selector="name" value="my/${project_name}"/>
        <phingcall target="composer:update"/>

        <!-- https://flex.symfony.com -->
        <!-- https://symfony.com/doc/current/quick_tour/flex_recipes.html -->
        <!-- https://symfony.com/doc/bundles/ -->

        <if>
            <equals arg1="${type}" arg2="api"/>
            <then>
                <property name="package" value="api" override="true"/>
                <property name="options" value="" override="true"/>
                <phingcall target="composer:require"/>
            </then>
        </if>

        <if>
            <or>
                <equals arg1="${type}" arg2="min"/>
                <equals arg1="${type}" arg2="max"/>
            </or>
            <then>
                <input propertyname="install" defaultValue="y">install profiler</input>
                <if>
                    <equals arg1="${install}" arg2="y"/>
                    <then>
                        <property name="package" value="profiler" override="true"/>
                        <property name="options" value="--dev" override="true"/>
                        <phingcall target="composer:require"/>
                    </then>
                </if>

                <input propertyname="install" defaultValue="y">install annotations</input>
                <if>
                    <equals arg1="${install}" arg2="y"/>
                    <then>
                        <property name="package" value="annotations" override="true"/>
                        <property name="options" value="" override="true"/>
                        <phingcall target="composer:require"/>
                    </then>
                </if>

                <input propertyname="install" defaultValue="y">install twig</input>
                <if>
                    <equals arg1="${install}" arg2="y"/>
                    <then>
                        <property name="package" value="twig" override="true"/>
                        <property name="options" value="" override="true"/>
                        <phingcall target="composer:require"/>
                    </then>
                </if>

                <input propertyname="install" defaultValue="y">install webpack-encore</input>
                <if>
                    <equals arg1="${install}" arg2="y"/>
                    <then>
                        <property name="package" value="webpack-encore" override="true"/>
                        <property name="options" value="" override="true"/>
                        <phingcall target="composer:require"/>
                    </then>
                </if>

                <input propertyname="install" defaultValue="y">install maker-bundle</input>
                <if>
                    <equals arg1="${install}" arg2="y"/>
                    <then>
                        <property name="package" value="maker-bundle" override="true"/>
                        <property name="options" value="--dev" override="true"/>
                        <phingcall target="composer:require"/>
                    </then>
                </if>
            </then>
        </if>
    </target>


</project>
